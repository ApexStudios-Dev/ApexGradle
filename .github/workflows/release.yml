on:
    workflow_dispatch:
    push:
        branches: [ "main" ]
        paths: [ "src/**" ]

jobs:
    vars:
        name: Get Variables
        runs-on: apexstudios
        outputs:
            version: ${{ steps.version.outputs.version }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                fetch-tags: true

            - name: Determine version
              uses: paulhatch/semantic-version@v5.4.0
              id: version
              with:
                change_path: "./"
                version_format: "${major}.${minor}.${patch}"
                search_commit_body: true
                bump_each_commit: true

    test:
        name: Test - ${{ needs.vars.outputs.version }}
        needs: [ vars ]
        runs-on: apexstudios
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Java
              uses: actions/setup-java@v4
              with:
                  distribution: temurin
                  java-version: 17

            - name: Setup Gradle
              uses: gradle/actions/setup-gradle@v4
              with:
                  cache-disabled: true

            - name: Mark Gradle as Executable
              run: chmod +x ./gradlew

            - name: Test
              run: ./gradlew :immaculateCheck

    publish:
        name: Publish - ${{ needs.vars.outputs.version }}
        needs: [ vars, test ]
        runs-on: apexstudios
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Java
              uses: actions/setup-java@v4
              with:
                  distribution: temurin
                  java-version: 17

            - name: Setup Gradle
              uses: gradle/actions/setup-gradle@v4
              with:
                  cache-disabled: true

            - name: Mark Gradle as Executable
              run: chmod +x ./gradlew

            - name: Publish
              run: ./gradlew :publish
              env:
                  VERSION: ${{ needs.vars.outputs.version }}
                  MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
                  MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}